//TEXTS COLORS

.color-transparent {
  color: transparent;
}

.color-form {
  color: $form-label;
}

.color-var {
  color: var(--color-var);
}

//BACKGROUNDS

.bg-transparent, .bg-none {
  background-color: transparent !important;
}
.hover-bg-transparent, .hover-bg-none {
  &:hover {
    background-color: transparent !important;
  }
}

.bg-var {
  background-color: var(--bg-var);
}

//GOES ON TOP OF COLOR
.bg-gradient {
  background-image: linear-gradient(var(--bg-angle, 120deg), transparent 40%, rgba(#000000, .25) 100%);
}
.bg-gradient-circular {
  background-image: radial-gradient(transparent 50%, rgba(#000000, .28));
}

//BORDER COLORS
@each $name, $color in $complete-colors {
  .border-#{$name} {
    border-color: $color !important;
  }
  .hover-border-#{$name} {
    &:hover {
      border-color: $color !important;
    }
  }
}
.border-transparent {
  border-color: transparent !important;
}

//FOCUS
@each $name, $color in $colors {
  .focus-color-#{$name}:focus {
    color: $color !important;
  }
  .focus-bg-#{$name}:focus {
    background-color: $color !important;
  }
}

//CIRCLES


.circle {
  display: inline-block;
  border-radius: 50%;
  min-width: 1rem;
  min-height: 1rem;
  vertical-align: middle;
  background-color: $primary;
  margin: .3rem;
  margin-top: 2px;
  margin-left: 0;
  border-style: solid;
  border-width: .3rem;
  border-color: lighten($primary, 50%);
  &.text-lg {
    min-width: 1.4rem;
    min-height: 1.4rem;
    border-width: .3rem;
  }
  &.text-xl {
    min-width: 1.6rem;
    min-height: 1.6rem;
    border-width: .4rem;
  }
  &.text-2x {
    min-width: 1.7rem;
    min-height: 1.7rem;
    border-width: .3rem;
  }
}

//MAIN COLOR CLASSES
@each $name, $color in $complete-colors {

  .color-#{$name} {
    //color: $color !important;
    color: var(--#{$name}) !important;
  }

  //all content
  .color-#{$name}-all {
    color: var(--#{$name}) !important;
    fill: var(--#{$name});
    h1, h2, h3, h4, h5, h6, p, a, small {
      color: var(--#{$name});
    }
  }
  @if $second_theme != false {
    [data-theme="#{$second_theme}"] {
      .#{$second_theme}\:color-#{$name}-all {
        color: var(--#{$name}) !important;
        h1, h2, h3, h4, h5, h6, p, a, small, strong, b {
          color: var(--#{$name});
        }
      }
    }
  }


  //hover
  .hover-color-#{$name} {
    &:hover {
      color: var(--#{$name}) !important;
    }
  }
  //hover all content
  .hover-color-#{$name}-all {
    &:hover {
      color: var(--#{$name}) !important;
      h1, h2, h3, h4, h5, h6, p, a, small {
        color: var(--#{$name});
      }
    }
  }


  .color-#{$name}-o {
    color: rgba($color, var(--var-opacity, var(--opacity, 0.3)));
  }
  .bg-#{$name} {
    background-color: var(--#{$name}) !important;
  }

  @if $second_theme != false {
    .something {
      background-color: $second_theme !important;
    }
    [data-theme="#{$second_theme}"] {
      .#{$second_theme}\:color-#{$name} {
        color: $color !important;
      }
      .#{$second_theme}\:bg-#{$name} {
        background-color: $color !important;
      }
    }
  }
  
  //HOVER
  .hover-bg-#{$name} {
    &:hover {
      background-color: var(--#{$name}) !important;
    }
  }
  

  //FOCUS
  .focus-bg-#{$name} {
    &:focus-within {
      background-color: var(--#{$name}) !important;
    }
  }
  
//FOCUS INSIDE G
  .focus-inside-bg-#{$name} {
    &:focus {
      background-color: var(--#{$name}) !important;
    }
  }

//FOCUS INSIDE COLOR
.focus-inside-color-#{$name} {
  &:focus {
    color: var(--#{$name}) !important;
  }
}

//OPACITY
  .bg-#{$name}-o {
    background-color: rgba($color, var(--bg-opacity, .5)) !important;
  }
  .shadow-#{$name} {
    //horizontal vertical blur spread
    box-shadow: 0px 6px 20px -5px rgba($color, 0.6);
  }
  .shadow-#{$name}-sm {
    box-shadow: 0px 4px 15px -5px rgba($color, 0.6);
  }
  .shadow-#{$name}-lg {
    //horizontal vertical blur spread
    box-shadow: 0px 8px 25px -5px rgba($color, 0.6);
  }
  .shadow-#{$name}-xl {
    box-shadow: 0 20px 25px -5px rgba($color, 0.1), 0 10px 10px -5px rgba($color, 0.04) !important;
  }
  .shadow-radar-#{$name} {
    box-shadow: 0px 0px 1px 2.8rem rgba($color, 0.09), 0px 0px 1px 1.1rem rgba($color, 0.15);
  }
  .shadow-radar-#{$name}-sm {
    box-shadow: 0px 0px 1px 1.6rem rgba($color, 0.09), 0px 0px 1px .7rem rgba($color, 0.12);
  }
  .shadow-radar-#{$name}-lg {
    box-shadow: 0px 0px 1px 4rem rgba($color, 0.09), 0px 0px 1px 1.8rem rgba($color, 0.14), 0px 0px 1px 2.1rem rgba($color, 0.03);
  }
  .shadow-#{$name}-full {
    box-shadow: 0px 6px 28px 0px rgba($color, 0.2);
  }
  .box-shadow-#{$name} {
    box-shadow: 0 80px 80px rgba($color,.07),0 40px 33px rgba($color,.05),0 22px 17px rgba($color,.042),0 12px 10px rgba($color,.035),0 6px 5px rgba($color,.028),0 2px 2px rgba($color,.02);
  }
  .hover-box-shadow-#{$name} {
    &:hover {
      box-shadow: 0 80px 80px rgba($color,.07),0 40px 33px rgba($color,.05),0 22px 17px rgba($color,.042),0 12px 10px rgba($color,.035),0 6px 5px rgba($color,.028),0 2px 2px rgba($color,.02);
    }
  }
  .hover-shadow-#{$name} {
    &:hover {
      box-shadow: 0px 8px 25px -5px rgba($color, 0.6);
    }
  }
  .hover-shadow-#{$name}-full {
    &:hover {
      box-shadow: 0px 6px 28px 0px rgba($color, 0.2);
    }
  }
  .circle-#{$name} {
    background-color: $color;
    border-color: lighten($color, 50%);
  }

  
}
@media (min-width: $desktop-breakpoint) {

  
  @each $name, $color in $colors {
    .md-color-#{$name} {
      color: var(--#{$name});
    }
    .md-hover-color-#{$name} {
      &:hover {
        color: var(--#{$name}) !important;
      }
    }
    .md-bg-#{$name} {
      background-color: var(--#{$name});
    }
  }
}

.hover-bg-noimage {
  &:hover {
    background-image: none;
  }
}
.hover-bg-nocolor {
  &:hover {
    background-color: transparent;
  }
}

.bg-gradient-var {
  background-image: linear-gradient(var(--bg-angle, 135deg), var(--bg-color) var(--bg-start, 40%), var(--bg-color2, --bg-color)  100%);
}

@each $name, $color in $colors {
  
  .bg-gradient-#{$name} {
    background-color: $color;
    background-image: linear-gradient(var(--bg-angle, 135deg), rgba($color, calc(var(--bg-opacity, 1)*1)) var(--bg-start, 40%), rgba(darken($color, 15%), calc(var(--bg-opacity, 1)*1))  100%);
  }
  .bg-gradient-#{$name}-circular {
    background-color: $color;
    background-image: radial-gradient($color, darken($color, 15%));
  }
  .bg-gradient-#{$name}-transparent {
    background-color: transparent;
    background-image: linear-gradient(var(--bg-angle, 180deg), $color var(--bg-start, 40%), rgba($color, 0%) var(--bg-end, 100%));
  }
  .bg-gradient-transparent-#{$name} {
    background-color: transparent;
    background-image: linear-gradient(var(--bg-angle, 180deg), rgba($color, 0%) var(--bg-start, 40%), $color var(--bg-end, 100%));
  }
  .bg-duo-#{$name} {
    background: $color;
    background: linear-gradient(var(--bg-angle, 120deg), rgba($color,1) var(--bg-start, 40%), lighten($color, 2%) var(--bg-end, 62%), darken($color, 5%) var(--bg-end, 62%));
  }

  .overlay-var {
    &:after {
      display: block;
      content: '';
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      position: absolute;
      z-index: 1;
      background: var(--overlay-bg);
    }
    & > * {
      z-index: 100;
    }
  }

  //DUAL COLORS
@each $name2, $color2 in $colors {

  @if $name != $name2 {
    .bg-gradient-#{$name}-#{$name2} {
      background-color: $color;
      background-image: linear-gradient(var(--bg-angle, 120deg), rgba($color, var(--bg-opacity, 1)) var(--bg-start, 40%), rgba($color2, var(--bg-opacity, 1)) var(--bg-end, 100%));
    }
    .bg-gradient-#{$name}-#{$name2}-circular {
      background-color: $color;
      background-image: radial-gradient(rgba($color, var(--bg-opacity, 1)), rgba($color2, var(--bg-opacity, 1)));
    }
  }
}

  .overlay-gradient-#{$name} {
    &:after {
      display: block;
      content: '';
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      position: absolute;
      z-index: 1;
      background-color: rgba($color, .4);
      background-image: linear-gradient(var(--overlay-angle, 160deg), rgba($color, .2) 30%, rgba($color, .4) 100%);
    }
  }

  .overlay-#{$name} {
    &:after {
      display: block;
      content: '';
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      position: absolute;
      z-index: 1;
      background-color: rgba($color, .4);
    }
  }

  .hover-overlay-#{$name} {
    &:hover {
      &:after {
        display: block;
        content: '';
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        position: absolute;
        z-index: 1;
        background-color: rgba($color, .4);
      }
    }
  }
}

.hover-overlay-none {
  &:hover {
    &:after {
      display: none !important;
    }
  }
}


//SOCIAL
$social: ('facebook':#3b57a1, 'twitter':#4aa0eb, 'google':#D93D2C, 'whatsapp':#35B83F, 'linkedin':#0B66C2, 'instagram':#e4405f);

@each $name, $color in $social {
  .#{$name}, .color-#{$name} {
    color: $color !important;
  }
  .bg-#{$name} {
    background-color: $color !important;
    &:hover {
        background-color: lighten($color, 10%)
    }
  }
}

//FILTERS
.filter-none {
  filter: none;
}
.hover-filter-none {
  &:hover {
    filter: none;
  }
}
.filter-grayscale {
  -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */
  filter: grayscale(100%);
  &:hover {
    filter: grayscale(100%);
  }
}
.filter-blur {
  filter: blur(3px);
  &:hover {
    filter: blur(3px);
  }
}
.filter-contrast {
  filter:contrast(200%);
  &:hover {
    filter:contrast(200%);
  }
}
.filter-saturate {
  filter:saturate(8);
  &:hover {
    filter:saturate(8);
  }
}
.filter-sepia {
  filter:sepia(100%);
  &:hover {
    filter:sepia(100%);
  }
}
.hover-filter-grayscale {
  &:hover {
    filter: grayscale(100%);
  }
}
.hover-filter-blur {
  &:hover {
    filter: blur(4px);
  }
}
.hover-filter-contrast {
  &:hover {
    filter:contrast(200%);
  }
}
.hover-filter-saturate {
  &:hover {
    filter:saturate(8);
  }
}
.hover-filter-sepia {
  &:hover {
    filter:sepia(100%);
  }
}


.bg-diagonal {
  display: block;
  // width: 100%;
  // height: 60px;
  // margin-top: -60px;
  -webkit-clip-path: polygon(0 100%, 100% 0, 100% 100%);
  clip-path: polygon(0 100%, 100% 0, 100% 100%);
}

.bg-diagonal-inverse {
  display: block;
  // width: 100%;
  // height: 60px;
  // margin-top: -60px;
  -webkit-clip-path: polygon(0 0, 0 100%, 100% 100%);
  clip-path: polygon(0 0, 0 100%, 100% 100%);
}



//BLEND MODES
$blends: normal, multiply, screen, overlay, darken, lighten, color-dodge, color-burn, difference, exclusion, hue, saturation, color, luminosity, hard-light;
@each $blend in $blends {
  .blend-#{$blend} {mix-blend-mode: $blend;}
  .hover-blend-#{$blend} {
    &:hover {
      mix-blend-mode: $blend !important;
    }
  }
  .bg-blend-#{$blend} {background-blend-mode: $blend;}
  .hover-bg-blend-#{$blend} {
    &:hover {
      background-blend-mode: $blend !important;
    }
  }
}


//BG FROSTED BLUR
.bg-frosted, .bg-blur {
  background-color: rgba($white, 0.17);
  -webkit-backdrop-filter: blur(8px); /* Safari 9+ */
  backdrop-filter: blur(8px); /* Chrome and Opera */
}
.bg-frosted-sm {
  background-color: rgba(255, 255, 255, 0.1);
  -webkit-backdrop-filter: blur(4px); /* Safari 9+ */
  backdrop-filter: blur(4px); /* Chrome and Opera */
}

.bg-frosted {
  background-color: rgba(255, 255, 255, 0.17);
  -webkit-backdrop-filter: blur(8px); /* Safari 9+ */
  backdrop-filter: blur(8px); /* Chrome and Opera */
}

.bg-frosted-lg {
  background-color: rgba(255, 255, 255, 0.2);
  -webkit-backdrop-filter: blur(15px); /* Safari 9+ */
  backdrop-filter: blur(15px); /* Chrome and Opera */
}

.bg-frosted-xl {
  background-color: rgba(255, 255, 255, 0.3);
  -webkit-backdrop-filter: blur(30px); /* Safari 9+ */
  backdrop-filter: blur(30px); /* Chrome and Opera */
}

.bg-frosted-xxl {
  background-color: rgba(255, 255, 255, 0.5);
  -webkit-backdrop-filter: blur(40px); /* Safari 9+ */
  backdrop-filter: blur(40px); /* Chrome and Opera */
}

.bg-glassmorphism {
  background: var(--bg-color, rgba(lighten($primary, 60%), 0.25));
  box-shadow: 0 6px 32px -30px rgba($primary, 0.37);
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  border: 1px solid rgba(255, 255, 255, 0.18);
}

.bg-glass {
  background-color: var(--bg-color, rgba(darken($primary, 10%), 0.3));
  box-shadow: rgba($dark, 0.25) 0px 30px 60px, rgba($dark, 0.2) 0px 0px 0px 0.5px inset;
  -webkit-backdrop-filter: blur(40px) brightness(80%) saturate(150%);
  backdrop-filter: blur(40px) brightness(80%) saturate(150%);
}

.hover-bg-glass {
  &:hover {
    background-color: rgba(darken($primary, 10%), 0.1);
    box-shadow: rgba($dark, 0.2) 0px 0px 0px 0.5px inset;
  }
}
//BG FROSTED BLUR
@each $name, $color in $colors {
  .bg-frosted-#{$name} {
    background-color: rgba($color, 0.70);
    -webkit-backdrop-filter: blur(6px); /* Safari 9+ */
    backdrop-filter: blur(6px); /* Chrome and Opera */
  }
}


@each $name, $color in $colors {
  .label-#{$name} {
    // @if $name == 'black' or $name == 'dark' {
    //   color: lighten($color, 35%);
    //   background-color: $color;
    // } @else {
    //   color: darken($color, 30%);
    //   background-color: lighten($color, 10%);
    // }
      @if ($name == 'white') {
        color: darken($color, 50%);
        background-color:  $color;
      } @else if ($name == 'red') {
        color: darken($color, 31%);
        background-color:  rgba(lighten($color, 2%), 0.6);
      } @else if (lightness($color) > 70) {
        color: darken($color, 25%);
        background-color: lighten($color, 2%);
      } @else if (lightness($color) > 40) {
        color: darken($color, 15%);
        background-color: lighten($color, 30%);
      } @else if (lightness($color) > 20) {
        color: lighten($color, 55%);
        background-color: $color;
      } @else {
        color: lighten($color, 78%);
        background-color: $color;
        //background-color: lighten($color, 25%);
      }

    // @if $name == 'black' or $name == 'dark' {
    //   color: lighten($color, 55%);
    //   background-color: $color;
    // } @else if $name == 'light' or $name == 'white' {
    //   color: darken($color, 25%);
    //   background-color: lighten($color, 5%);
    // } @else if $name == 'indigo' or $name == 'pink' {
    //   color: darken($color, 20%);
    //   background-color: lighten($color, 25%);
    // } @else if $name == 'primary' or $name == 'secondary' {
    //   @if (lightness($color) > 60) {
    //     color: darken($color, 55%);
    //     background-color: $color;
    //   } @else {
    //     color: darken($color, 20%);
    //     background-color: lighten($color, 25%);
    //   }
    // } @else {
    //   color: darken($color, 18%);
    //   background-color: lighten($color, 36%);
    // }
  }
}