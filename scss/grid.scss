.grid {
  display: grid;
}

@for $i from 1 through $columns {
  .grid-#{$i} {
    display: grid;
    grid-template-columns: repeat(#{$i}, 1fr);
  }
}

//RESPONSIVE GRID
@each $breakName, $max-width in $container-min-widths {
  @media (min-width: $max-width) {
    @for $i from 1 through $columns {
      .#{$breakName}-grid-#{$i} {
        //display: grid;
        grid-template-columns: repeat(#{$i}, 1fr);
      }
    }
  }
}

//GAPS
@for $i from 1 through 30 {
  .gap-#{$i} {
    --gap: #{$i}px;
    gap: #{$i}px;
  }
  .gapx-#{$i} {
    --gap: #{$i}px;
    column-gap: #{$i}px;
  }
  .gapy-#{$i} {
    row-gap: #{$i}px;
  }
}
@media (min-width: map-get($container-max-widths, 'md')) {
  @for $i from 1 through 30 {
    .md-gap-#{$i} {
      --gap-md: #{$i}px;
      gap: #{$i}px;

    }
    .md-gapx-#{$i} {
      --gapx-md: #{$i}px;
      column-gap: #{$i}px;
    }
    .md-gapy-#{$i} {
      --gapy-md: #{$i}px;
      row-gap: #{$i}px;
    }
  }
}
@media (min-width: map-get($container-max-widths, 'lg')) {
  @for $i from 1 through 30 {
    .lg-gap-#{$i} {
      --gap-lg: #{$i}px;
      gap: #{$i}px;

    }
    .lg-gapx-#{$i} {
      --gapx-lg: #{$i}px;
      column-gap: #{$i}px;
    }
    .lg-gapy-#{$i} {
      --gapy-lg: #{$i}px;
      row-gap: #{$i}px;
    }
  }
}