//ICON BG

.box-icon {
  overflow: hidden;
  &::before {
    font-family: "Font Awesome 5 Pro";
    font-weight: 900;
    content: attr(data-icon);
    font-size: 7rem;
    position: absolute;
    top: -40px;
    right: -40px;
    opacity: .08;
    transform: rotate3d(0, 0, 1, 15deg) !important;
  }
}

.box-img {
  width: 100px;
  color: $dark;
  text-align: center;
  font-size: .9rem;
  div {
    width: 100%;
    height: 92px;
    padding: 13px;
    background-color: $white;
    border-radius: 20px;
    img {
      object-fit: contain;
      width: 100%;
      height: 100%;
      mix-blend-mode: darken;
      opacity: .9;
      transition: all 0.4s ease-in-out;
    }
  }
  @media (max-width: $desktop-breakpoint) {
    width: 80px;
    margin-top: .5rem;
    margin-right: .5rem;
    div {
      height: 72px;
      padding: 8px;
      margin-bottom: .4rem;
    }
  }
  &.no-m {
    div {
        margin-bottom: 0;
    }
  }
}

//BOXES
.box, .box-xxs, .box-xs, .box-sm, .box-lg, .box-xl {
  position: relative;
  background-color: rgba($box-bg, var(--o, 1));
  box-shadow: $box-shadow;
  // @if variable-exists($box-shadow) {
  //   box-shadow: $box-shadow;
  // }
  @media (max-width: $desktop-breakpoint) {
  }
  &.box-o-1 {
    background-color: rgba($box-bg, .1);
  }
  &.box-o-3 {
    background-color: rgba($box-bg, .3);
  }
  &.box-o-5 {
    background-color: rgba($box-bg, .5);
  }
  &.box-o-7 {
    background-color: rgba($box-bg, .7);
  }
  &.box-o-9 {
    background-color: rgba($box-bg, .9);
  }
}


.box {
  padding: ($box-padding * 1.1) ($box-padding * .95) ($box-padding * 1.08) ($box-padding * .95);
  border-radius: $box-radius * .92;
  @media (min-width: map-get($container-max-widths, 'md')) {
    padding: ($box-padding * 1.18) ($box-padding * 1) ($box-padding * 1.15) ($box-padding * 1);
    border-radius: $box-radius * .96;
  }
  @media (min-width: $container-min) {
    padding: ($box-padding * 1.25) ($box-padding * 1.13) ($box-padding * 1.2) ($box-padding * 1.13);
    border-radius: $box-radius;
  }
}

.box-xxs {
  padding: $box-padding * .3;
  border-radius: $box-radius * .35;
  @media (min-width: map-get($container-max-widths, 'md')) {
    padding: $box-padding * .35;
    border-radius: $box-radius * .38;
  }
  @media (min-width: $container-min) {
    padding: $box-padding * .4;
    border-radius: $box-radius * .4;
  }
}

.box-xs {
  padding: $box-padding * .7;
  border-radius: $box-radius * .75;
  @media (min-width: map-get($container-max-widths, 'md')) {
    padding: $box-padding * .75;
    border-radius: $box-radius * .8;
  }
  @media (min-width: $container-min) {
    padding: $box-padding * .8;
  }
}

.box-sm {
  padding: $box-padding * .8;
  border-radius: $box-radius * .85;
  @media (min-width: map-get($container-max-widths, 'md')) {
    padding: $box-padding * .9;
    border-radius: $box-radius * .9;
  }
  @media (min-width: $container-min) {
    padding: $box-padding * .95;
  }
}

.box-lg {
  padding: ($box-padding * 1.15) ($box-padding * 1.01) ($box-padding * 1.13) ($box-padding * 1.01);
  border-radius: $box-radius;
  @media (min-width: map-get($container-max-widths, 'md')) {
    padding: ($box-padding * 1.35) ($box-padding * 1.2) ($box-padding * 1.3) ($box-padding * 1.12);
    border-radius: $box-radius * 1.2;
  }
  @media (min-width: $container-min) {
    padding: ($box-padding * 1.65) ($box-padding * 1.53) ($box-padding * 1.6) ($box-padding * 1.53);
    border-radius: $box-radius * 1.5;
  }
}


.box-xl {
    padding: ($box-padding * 1.65) ($box-padding * 1.51) ($box-padding * 1.63) ($box-padding * 1.51);
    border-radius: $box-radius * 1.2;
  @media (min-width: map-get($container-max-widths, 'md')) {
    padding: ($box-padding * 2.1) ($box-padding * 1.8) ($box-padding * 2) ($box-padding * 1.8);
    border-radius: $box-radius * 1.2;
  }
  @media (min-width: $container-min) {
    padding: ($box-padding * 2.65) ($box-padding * 2) ($box-padding * 2.6) ($box-padding * 2);
    border-radius: $box-radius * 2.5;
  }
}

.box-bg {
  position: relative;
  display: block;
  &:after {
    content: '';
    position: absolute;
    z-index: -1;
    top: 0; bottom: 0; left: 0; right: 0;
    background: var(--box-bg-color, transparent);
    border-radius: var(--rounded, inherit);
  }
  * {
    z-index: 2;
  }
  .box-bg-media {
    position: absolute;
    z-index: -1;
    object-fit: cover;
    top: 0; left: 0;
    width: 100%; height: 100%;
    object-position: center 30%;
    border-radius: var(--rounded, inherit);
  }
  &.box-bg-blur {
    &:after {
      -webkit-backdrop-filter: blur(7px);
      backdrop-filter: blur(7px);
      box-shadow: 0 0.75rem 2rem 0 var(--box-bg-color, transparent);
    }
    border: 1px solid var(--box-bg-color, transparent);
  }
}

//CAROUSEL
//https://css-tricks.com/css-only-carousel/
.browser-carousel {
    display: flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    -ms-overflow-style: none;
    scrollbar-width: none;
    overscroll-behavior-inline: contain;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
	
	&::-webkit-scrollbar {
        width: 0px !important;
        background: transparent;
        display: none;
	}
	&::-webkit-scrollbar-thumb {
        width: 0px !important;
        background: transparent;
	}
	&::-webkit-scrollbar-track {
        width: 0px !important;
        background: transparent;
	}
  .carousel-cell {
      scroll-snap-align: start;
  }
  &.carousel-center {
    .carousel-cell {
        scroll-snap-align: center;
    }
  }
}


//NAV
#navbar {
  width: 100%;
}

@media (max-width: $desktop-breakpoint) {
  #navbar {
    
  }
}


.hamburger {
  display: inline-block;
  overflow: visible;
  padding: .2rem;
  cursor: pointer;
  transition-timing-function: linear;
  transition-duration: .15s;
  transition-property: opacity,filter;
  text-transform: none;
  color: inherit;
  border: 0;
  background-color: transparent;
  -webkit-user-select: none;
  user-select: none;
}


.hamburger.is-active:hover, .hamburger:hover {
  opacity: .7;
}

.hamburger.is-active .hamburger-inner, .hamburger.is-active .hamburger-inner:after, .hamburger.is-active .hamburger-inner:before {
  background-color:#fff
}


//BOX-EFFECTS
.box-effect {
  position: relative;
  //backdrop-filter: blur(20px);
  &:before {
    content: "";
    pointer-events: none;
    user-select: none;
    position: absolute;
    z-index: -1;
    top: -1px;
    right: -1px;
    bottom: -1px;
    left: -1px;
    border-radius: inherit;
    //backdrop-filter: blur(20px);
  }
}

@each $name, $color in $colors {
  $color_bottom: darken($color, 10%);
  $color_border1: lighten($color, 25%);
  $color_border2: lighten($color, 18%);

  .box-effect-#{$name} {
    //background-image: linear-gradient(rgba($color, 0.95), rgba(darken($color_bottom, 10%), 0.95));
    background-image: linear-gradient(rgba($color, 0), rgba(darken($color_bottom, 10%), 0.35));
    &:before {
      background-image: linear-gradient(150deg, rgba(lighten($color_border1, 35%), 0.6), rgba(lighten($color_border2, 28%), 0.4));
    }
  }
}

//ALERTS
.alert {
  position: relative;
  padding: .75rem 1.25rem;
  border: none;
  border-radius: $btn-radius;
  font-size: .95rem;
}

//NOTE
.note {
  border-radius: $box-radius;
  border-width: 1px;
  border-style: solid;
  border-left-width: 10px;
  padding-top: 1rem;
  padding-bottom: 1rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  box-shadow: 0px 10px 50px -18px var(--shadow-color, transparent);
  @media (min-width: map-get($container-max-widths, 'md')) {
    padding-top: 1.75rem;
    padding-bottom: 1.75rem;
    padding-left: 1.25rem;
    padding-right: 1.5rem;
  }
}