//IMAGES
.img-fluid {
  max-width: 100%;
  height: auto;
}

//BACKGROUNDS POSITIONS
.bg-t {
  background-position: top;
}
.bg-b {
  background-position: bottom;
}
.bg-c {
  background-position: center;
}
.bg-l {
  background-position: left;
}
.bg-r {
  background-position: right;
}
.bg-tc {
  background-position: center top;
}
.bg-tl {
  background-position: left top;
}
.bg-bl {
  background-position: left bottom;
}
.bg-tr {
  background-position: right top;
}
.bg-br {
  background-position: right bottom;
}
.bg-bc {
  background-position: center bottom;
}


.bg-repeat {
  background-repeat: repeat;
}

.bg-no-repeat {
  background-repeat: no-repeat;
}

.bg-repeat-x {
  background-repeat: repeat-x;
}

.bg-repeat-y {
  background-repeat: repeat-y;
}

.bg-repeat-round {
  background-repeat: round;
}

.bg-repeat-space {
  background-repeat: space;
}

.bg-auto {
  background-size: auto;
}

.bg-cover {
  background-size: cover;
}

.bg-contain {
  background-size: contain;
}

.bg-fixed {
  background-attachment: fixed;
}

.bg-center {
  background-position: center;
}
.bg-right {
  background-attachment: right;
}
.bg-left {
  background-attachment: left;
}

.bg-local {
  background-attachment: local;
}

.bg-scroll {
  background-attachment: scroll;
}

//ANIMATION
.bg-zoom { 
  transition: all .3s ease-in-out;
  background-size: 100%;
  background-position: center;
  &:hover { 
    background-size: 106%;
  }
}


//OBJECT
.object-none {
  -o-object-fit: none;
     object-fit: none !important;
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain !important;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover !important;
}

.object-fill {
  -o-object-fit: fill;
     object-fit: fill !important;
}

.object-scale-down {
  -o-object-fit: scale-down;
     object-fit: scale-down;
}

.object-top {
  -o-object-position: top;
     object-position: top;
}

.object-bottom {
  -o-object-position: bottom;
     object-position: bottom;
}

.object-center {
  -o-object-position: center;
     object-position: center !important;
}

.object-left {
  -o-object-position: left;
     object-position: left;
}

.object-left-bottom {
  -o-object-position: left bottom;
     object-position: left bottom;
}

.object-left-top {
  -o-object-position: left top;
     object-position: left top;
}

.object-right {
  -o-object-position: right;
     object-position: right;
}

.object-right-bottom {
  -o-object-position: right bottom;
     object-position: right bottom;
}

.object-right-top {
  -o-object-position: right top;
     object-position: right top;
}

.object-responsive {
  -o-object-fit: cover;
  object-fit: cover !important;
  -o-object-position: center;
  object-position: center !important;
  width: 100%;
  height: 100%;
  @media (max-width: $desktop-breakpoint) {
    //width: auto;
    //height: 100%;
  }
}


@media (min-width: $desktop-breakpoint) {
  .md-object-contain {
    -o-object-fit: contain;
       object-fit: contain !important;
  }
  
  .md-object-cover {
    -o-object-fit: cover;
       object-fit: cover !important;
  }
}


//VIDEO


//ICONS
.icon-circle {
  display: table;
  padding: .8rem .73rem;
  background-color: $light;
  border-radius: 100%;
  width: auto;
  i{
    display: table-cell;
    vertical-align: middle;
    text-align: center;
  }
}

.icon-layer {
  position: relative;
}

.icon-badge {
  &::before {
    content: attr(data-icon);
    position: absolute;
    z-index: 1;
    top: -2px;
    right: -6px;
    border-radius: 3rem;
    font-size: 22%;
    background-color: $light;
    color: $body;
    padding: 2px 4px 1.5px 4px;
  }
}

.icon-badge-primary {
  &::before {
    content: attr(data-icon);
    position: absolute;
    top: -2px;
    right: -6px;
    border-radius: $btn-radius;
    font-size: 22%;
    background-color: $primary;
    color: $white;
    padding: 2px 4px 1.5px 4px;
  }
}

.icon-badge-orange {
  &::before {
    content: attr(data-icon);
    position: absolute;
    top: -2px;
    right: -6px;
    border-radius: $btn-radius;
    font-size: 22%;
    background-color: $orange;
    color: $white;
    padding: 2px 4px 1.5px 4px;
  }
}

.icon-calendar {
  &::before {
    content: attr(data-icon);
    position: absolute;
    bottom: 11%;
    width: 100%;
    text-align: center;
    font-size: 40%;
    color: white;
    
  }
}

.icon-file {
  &::before {
    content: attr(data-icon);
    position: absolute;
    bottom: 20%;
    width: 100%;
    text-align: center;
    font-size: 20%;
    //font-weight: $font-weight-regular;
  }
}



//TOOLTIP
.tooltip {
  position: relative;
  display: inline-block;
  cursor: default; //help;
  .tooltip-box {
    position: absolute;
    left: 50%;
    transform: translate(-50%, -50%);
    bottom: 1.5rem;
    visibility: hidden;
    background-color: $primary;
    color: $light;
    text-align: center;
    font-size: .8rem;
    font-weight: normal;
    border-radius: $btn-radius;
    padding: .7rem .5rem;
    min-height: 2rem;
    width: 130%;
    display: block;
    min-width: 160px;
    max-width: 240px;
    text-decoration: none;
  
    word-break: break-word;
    overflow-wrap: break-word;
    word-wrap: break-word;
    transform: perspective(1px) translate(-50%, -5px);

    &::before {
      overflow: hidden;
      content:"";
      width: 0;
      height: 0;
      line-height: 0;
      border-top: 5px solid $primary;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-bottom: transparent;
      transform: translateX(-50%);
    }
  }
}

*[data-tooltip] {
  position: relative;
  display: inline-block;
  cursor: default; //help;
  &::before, &::after {
    pointer-events: none;
    outline: none;
    display: block;
    position: absolute;
    z-index: 999;
    left: 50%;
    bottom: 105%;
    margin: 0;
    visibility: hidden;
    opacity: 0;
    transition: visibility 1s linear,opacity .5s linear;
    box-shadow: 0 -2px 2px rgba(0, 0, 0, 0.2);
  }
  &:hover {
    &::before, &::after {
      visibility: visible;
      opacity: 1 !important;
    }
  }
}

*[data-tooltip]::before {
  overflow: hidden;
  content:"";
  width: 0;
  height: 0;
  line-height: 0;
  border-top: 5px solid $primary;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: transparent;
  transform: translateX(-50%);
}

*[data-tooltip]::after {
  overflow: hidden !important;
  content: attr(data-tooltip);
  background-color: $primary;
  color: red;
  text-align: center;
  font-size: .8rem;
  font-weight: normal;
  border-radius: $btn-radius;
  padding: .7rem .5rem;
  min-height: 2rem;
  width: 130%;
  display: block;
  min-width: 160px;
  max-width: 240px;
  text-decoration: none;

  word-break: break-word;
  overflow-wrap: break-word;
  word-wrap: break-word;

  transform: perspective(1px) translate(-50%, -5px);
}

*[data-tooltip][data-tooltip-theme~="dark"]::after {
    background-color: $dark;
}
*[data-tooltip][data-tooltip-theme~="dark"]::before {
    border-top-color: $dark;
}

*[data-tooltip][data-tooltip-theme~="green"]::after {
    background-color: $green;
}
*[data-tooltip][data-tooltip-theme~="green"]::before {
    border-top-color: $green;
}

*[data-tooltip][data-tooltip-theme~="red"]::after {
    background-color: $red;
}
*[data-tooltip][data-tooltip-theme~="red"]::before {
    border-top-color: $red;
}

*[data-tooltip][data-tooltip-theme~="orange"]::after {
    background-color: $orange;
}
*[data-tooltip][data-tooltip-theme~="orange"]::before {
    border-top-color: $orange;
}

//SVG

.svg-fill-transparent, .svg-fill-none {
  fill: transparent;
  fill-opacity: 0;
}
.svg-fill-current {
  fill: currentColor;
  &path {
    fill: currentColor;
  }
  &svg path{
    fill: currentcolor;
  }
}
.parent svg path{
  fill: $primary;
  stroke: $primary;
}
.svg-stroke-transparent {
  stroke: transparent;
  stroke-opacity: 0;
}
.svg-stroke-current {
  stroke: currentColor;
}
@each $name, $color in $colors {
  .svg-fill-#{$name} {
    fill: $color;
  }
  .svg-stroke-#{$name} {
    stroke: $color;
  }
}
.svg-stroke-0, .svg-stroke-none {
  stroke-width: 0;
}
.svg-stroke-1 {
  stroke-width: 1;
}
.svg-stroke-2 {
  stroke-width: 2;
}
.svg-stroke-3 {
  stroke-width: 3;
}


//BETTER IMAGES IN DARK MODE
.img-dark {
  filter: brightness(.8) contrast(1.2);
}
@if $second_theme {
  [data-theme="dark"] {
    img {
      filter: brightness(.8) contrast(1.2);
    }
  }
}